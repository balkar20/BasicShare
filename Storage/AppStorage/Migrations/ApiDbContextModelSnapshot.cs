// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Storage.AppStorage;

#nullable disable

namespace AppStorage.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Base.DataBase.Entities.CameraModuleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CameraModules");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.MotorControlsModuleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MotorControlsModules");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OrderPayloadId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.PowerSupplyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PowerSupplys");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afcb1ffd-152e-4695-8d29-01e042ebdb45"),
                            Description = "Description of BestStuff",
                            Name = "BestStuff"
                        },
                        new
                        {
                            Id = new Guid("09a5372e-3df1-4365-9b04-b00fb039b21f"),
                            Description = "Description of Lolly",
                            Name = "Lolly"
                        },
                        new
                        {
                            Id = new Guid("3bf3b92e-69b6-400f-8781-ffe15611c3ba"),
                            Description = "Description of Candy",
                            Name = "Candy"
                        },
                        new
                        {
                            Id = new Guid("1f2a493d-27e0-4ab0-aa69-aaf0140ae3b4"),
                            Description = "Description of PicksSexoMGLofty",
                            Name = "PicksSexoMGLofty"
                        },
                        new
                        {
                            Id = new Guid("2d12f82b-e62f-41bb-b586-d84355dd80d1"),
                            Description = "Description of Toffy",
                            Name = "Toffy"
                        },
                        new
                        {
                            Id = new Guid("99842e80-ad8f-49eb-9f99-53e2a92664fb"),
                            Description = "Description of Fuckas",
                            Name = "Fuckas"
                        },
                        new
                        {
                            Id = new Guid("b59a2283-1d97-4f34-b813-ee2b58ca178c"),
                            Description = "Description of Grep",
                            Name = "Grep"
                        });
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.ShipmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });
#pragma warning restore 612, 618
        }
    }
}
