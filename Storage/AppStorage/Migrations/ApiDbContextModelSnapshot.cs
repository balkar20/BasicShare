// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Storage.AppStorage;

#nullable disable

namespace AppStorage.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Base.DataBase.Entities.CameraModuleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CameraModules");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.MotorControlsModuleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MotorControlsModules");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrderPayloadId")
                        .HasColumnType("uuid");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.PowerSupplyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PowerSupplys");
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0db6f79c-cdca-4323-8a05-4cc8067a1899"),
                            Description = "Description of BestStuff",
                            Name = "BestStuff"
                        },
                        new
                        {
                            Id = new Guid("0fee95cd-34f2-47ad-81ea-f3482088a417"),
                            Description = "Description of Lolly",
                            Name = "Lolly"
                        },
                        new
                        {
                            Id = new Guid("fd654977-2f29-4e46-b78d-9142b6adf878"),
                            Description = "Description of Candy",
                            Name = "Candy"
                        },
                        new
                        {
                            Id = new Guid("cc7c1ac1-40f9-45fa-80e1-b143a0711da9"),
                            Description = "Description of PicksSexoMGLofty",
                            Name = "PicksSexoMGLofty"
                        },
                        new
                        {
                            Id = new Guid("9c365c3e-c057-4692-ba66-0a6a50e30db7"),
                            Description = "Description of Toffy",
                            Name = "Toffy"
                        },
                        new
                        {
                            Id = new Guid("e883f377-6a66-4ef1-951e-d11c4e8d47cb"),
                            Description = "Description of Fuckas",
                            Name = "Fuckas"
                        },
                        new
                        {
                            Id = new Guid("7f56c411-a56b-46b4-9d6b-61273883cf8a"),
                            Description = "Description of Grep",
                            Name = "Grep"
                        });
                });

            modelBuilder.Entity("Core.Base.DataBase.Entities.ShipmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });
#pragma warning restore 612, 618
        }
    }
}
