@page "/"
@using IdentityProvider.Client.ViewModels.Inerfaces
@using IdentityProvider.Client.Components
@using IdentityProvider.Shared
@using ClientLibrary.Services
@using ClientLibrary.Interfaces

@inject IBaseMvvmViewModel<string, PooperViewModel> ViewModel

<h3>PoopPeople</h3>

@if (!string.IsNullOrWhiteSpace(ViewModel.StatusMessage))
{
    <MudAlert Severity="Severity.Error" Variant="Variant.Filled">@ViewModel.StatusMessage</MudAlert>
}

@if (ViewModel.IsBusy)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <h3>Pooper Grid</h3>
    <CascadingValue Value=@ViewModel Name="ViewModel">
        <MudGrid>
            @foreach (var pooper in ViewModel.DataList)
            {
                <MudItem Style="width: 70vh;">
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderAvatar>
                                <MudAvatar Image="poop.svg.png"  Color="Color.Secondary">I</MudAvatar>
                            </CardHeaderAvatar>
                            <CardHeaderContent>
                                <MudText Typo="Typo.body1">@pooper.PooperAlias</MudText>
                                <MudText Typo="Typo.body2">@pooper.AmountOfPoops</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <AuthorizeView Roles="Administrator">
                                    <Authorized>
                                        <MudIconButton OnClick="@(() => OpenDialog(pooper))" Icon="@Icons.Material.Filled.Edit" Color="Color.Dark"/>
                                    </Authorized>
                                    @* <NotAuthorized> *@
                                    @*      *@
                                    @* </NotAuthorized> *@
                                </AuthorizeView>
                                <AuthorizeView Roles="Pooper">
                                    <Authorized>
                                        <MudText Typo="Typo.body2">Fucking Poo</MudText>
                                    </Authorized>
                                    @* <NotAuthorized> *@
                                    @*      *@
                                    @* </NotAuthorized> *@
                                </AuthorizeView>
                            </CardHeaderActions>
                        </MudCardHeader>
                        @if (pooper.Image != null)
                        {
                            <MudCardMedia Image="@pooper.Image" />
                        }
                        else
                        {
                            <MudCardMedia Image="poop.svg.png" />
                        }                       
                        <MudCardContent>
                            <MudText Typo="Typo.body2">@pooper.Description</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Default" />
                            <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    </CascadingValue>
}